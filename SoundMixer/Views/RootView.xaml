<Window x:Class="SoundMixer.Views.RootView"
        xmlns="http://schemas.microsoft.com/winfx/2006/xaml/presentation"
        xmlns:x="http://schemas.microsoft.com/winfx/2006/xaml"
        xmlns:d="http://schemas.microsoft.com/expression/blend/2008"
        xmlns:mc="http://schemas.openxmlformats.org/markup-compatibility/2006"
        xmlns:s="https://github.com/canton7/Stylet"
        xmlns:local="clr-namespace:SoundMixer.Views"
        xmlns:vm="clr-namespace:SoundMixer.ViewModels"
        xmlns:dd="urn:gong-wpf-dragdrop"
        xmlns:r="clr-namespace:SoundMixer"
        xmlns:custom="clr-namespace:SoundMixer.UserControls"
        mc:Ignorable="d"
        Title="Sound Mixer" Height="720" Width="1024"
        DataContext="RootViewModel"
        custom:SoundControl.SoloMuteClick="{s:Action SoloMuteButton_Click}"
        Closing="{s:Action Window_Closing}">

    <Window.InputBindings>
        <KeyBinding Key="N" Modifiers="Ctrl" Command="{s:Action NewWorkspaceFile}"/>
        <KeyBinding Key="O" Modifiers="Ctrl" Command="{s:Action OpenWorkspaceFile}"/>
        <KeyBinding Key="S" Modifiers="Ctrl" Command="{s:Action SaveWorkspaceFile}"/>
        <KeyBinding Key="S" Modifiers="Ctrl+Shift" Command="{s:Action SaveWorkspaceFileAs}"/>
        <KeyBinding Key="C" Modifiers="Ctrl+Alt" Command="{s:Action AddSceneButton}"/>
        <KeyBinding Key="M" Modifiers="Ctrl+Alt" Command="{s:Action AddMoodButton}"/>
        <KeyBinding Key="S" Modifiers="Ctrl+Alt" Command="{s:Action AddSoundButton}"/>
        <KeyBinding Key="S" Modifiers="Ctrl+Alt+Shift" Command="{s:Action AddSoundFromYoutubeButton}"/>
        <KeyBinding Key="Space" Command="{s:Action PlayOrStopAllSoundsButton}"/>
    </Window.InputBindings>
    <DockPanel>
        <Menu DockPanel.Dock="Top" Name="menu" Background="White" VerticalAlignment="Top">
            <MenuItem Header="_File" VerticalAlignment="Stretch">
                <MenuItem Header="_New" InputGestureText="Ctrl+N" Click="{s:Action New_Click}"/>
                <MenuItem Header="_Open" InputGestureText="Ctrl+O" Click="{s:Action Open_Click}"/>
                <MenuItem Header="_Save" InputGestureText="Ctrl+S" Click="{s:Action Save_Click}"/>
                <MenuItem Header="Save _As" InputGestureText="Ctrl+Shift+S" Click="{s:Action SaveAs_Click}"/>
                <Separator/>
                <MenuItem Header="_Exit"/>
            </MenuItem>
            <MenuItem Header="_Edit">
                <MenuItem Header="Add S_cene" InputGestureText="Ctrl+Alt+C" Click="{s:Action AddScene_Click}"/>
                <MenuItem Header="Add _Mood" InputGestureText="Ctrl+Alt+M" Click="{s:Action AddMood_Click}" IsEnabled="{Binding SelectedScene, Converter={StaticResource ObjectToBooleanConverter}}"/>
                <MenuItem Header="Add _Sound" InputGestureText="Ctrl+Alt+S" Click="{s:Action AddSound_Click}" IsEnabled="{Binding SelectedMood, Converter={StaticResource ObjectToBooleanConverter}}"/>
                <!--<MenuItem Header="Add Sound from _YouTube" InputGestureText="Ctrl+Alt++Shift+S" Click="{s:Action AddSoundFromYoutube_Click}" IsEnabled="{Binding SelectedMood, Converter={StaticResource ObjectToBooleanConverter}}"/>-->
                <MenuItem Header="_Preferences" Click="{s:Action Preferences_Click}"/>
            </MenuItem>
            <MenuItem Header="_Help">
                <MenuItem Header="_Report a Bug" Click="{s:Action ReportABug_Click}"/>
                <Separator/>
                <MenuItem Header="_About" Click="{s:Action About_Click}"/>
            </MenuItem>
        </Menu>
        <Separator DockPanel.Dock="Top"/>
        <StatusBar DockPanel.Dock="Bottom">
            <StatusBarItem Height="22" Width="22">
                <Image RenderTransformOrigin="0.5,0.5" Source="/Resources/loading.png" Visibility="{Binding ShowLoadingImage, Converter={StaticResource BooleanToVisibilityConverter}}" >
                    <Image.Triggers>
                        <EventTrigger RoutedEvent="Image.Loaded">
                            <BeginStoryboard>
                                <Storyboard>
                                    <DoubleAnimation From="0.0" To="360.0" Duration="0:0:1" RepeatBehavior="Forever"
                                                     Storyboard.TargetName="RotatingTransform"
                                                     Storyboard.TargetProperty="(RotateTransform.Angle)"/>
                                </Storyboard>
                            </BeginStoryboard>
                        </EventTrigger>
                    </Image.Triggers>
                    <Image.RenderTransform>
                        <RotateTransform x:Name="RotatingTransform" Angle="0"/>
                    </Image.RenderTransform>
                </Image>
            </StatusBarItem>
            <StatusBarItem>
                <TextBlock Text="{Binding Status, Converter={StaticResource ProgramStatusToMessageConverter}}"/>
            </StatusBarItem>
            <StatusBarItem HorizontalAlignment="Right" Visibility="{Binding IsPlayingAll, Converter={StaticResource BooleanToVisibilityConverter}}">
                <TextBlock>
                    <Run Text="{Binding SelectedScene.Name}"/>
                    <Run Text=" - "/>
                    <Run Text="{Binding SelectedMood.Name}"/>
                </TextBlock>
            </StatusBarItem>
        </StatusBar>
        <Grid Name="mainGrid" Background="#40000000" Focusable="True">
            <Grid.ColumnDefinitions>
                <ColumnDefinition Width="*"/>
                <ColumnDefinition Width="*"/>
                <ColumnDefinition Width="2*"/>
            </Grid.ColumnDefinitions>
            <Grid.RowDefinitions>
                <RowDefinition Height="*"/>
                <RowDefinition Height="25px"/>
            </Grid.RowDefinitions>
            <ScrollViewer Grid.Column="0" VerticalScrollBarVisibility="Auto">
                <ItemsControl x:Name="sceneStack" ItemsSource="{Binding Workspace.Scenes}" VerticalAlignment="Stretch"
                              dd:DragDrop.IsDragSource="True" dd:DragDrop.IsDropTarget="True" dd:DragDrop.DragHandler="{Binding}">
                    <ItemsControl.ItemsPanel>
                        <ItemsPanelTemplate>
                            <StackPanel Name="scenePanel" Background="White" Margin="0,0,0,0"/>
                        </ItemsPanelTemplate>
                    </ItemsControl.ItemsPanel>
                    <ItemsControl.ItemTemplate>
                        <DataTemplate>
                            <Button Style="{StaticResource SceneButton}" PreviewMouseLeftButtonUp="{s:Action SelectScene_LeftMouseUp}">
                                <custom:EditableTextBlock Style="{StaticResource SceneEditableTextBlock}" Text="{Binding Name, Mode=TwoWay}"/>
                                <Button.ContextMenu>
                                    <ContextMenu>
                                        <MenuItem Header="Rename" Click="{s:Action RenameSceneButton_Click}"/>
                                        <MenuItem Header="Delete" Click="{s:Action RemoveSceneButton_Click}"/>
                                    </ContextMenu>
                                </Button.ContextMenu>
                            </Button>
                        </DataTemplate>
                    </ItemsControl.ItemTemplate>
                </ItemsControl>
            </ScrollViewer>
            <Button x:Name="addSceneButton" Content="Add scene" Click="{s:Action AddScene_Click}" Grid.Column="0" Grid.Row="1"/>
            <ScrollViewer Grid.Column="1" VerticalScrollBarVisibility="Auto">
                <ItemsControl x:Name="moodStack" ItemsSource="{Binding SelectedScene.Moods}"
                              dd:DragDrop.IsDragSource="True" dd:DragDrop.IsDropTarget="True" dd:DragDrop.DragHandler="{Binding}">
                    <ItemsControl.ItemsPanel>
                        <ItemsPanelTemplate>
                            <StackPanel Name="moodPanel" Background="White" Margin="1,0,1,0"/>
                        </ItemsPanelTemplate>
                    </ItemsControl.ItemsPanel>
                    <ItemsControl.ItemTemplate>
                        <DataTemplate>
                            <Button Style="{StaticResource MoodButton}" PreviewMouseLeftButtonUp="{s:Action SelectMood_LeftMouseUp}">
                                <custom:EditableTextBlock Style="{StaticResource MoodEditableTextBlock}" Text="{Binding Name, Mode=TwoWay}"/>
                                <Button.ContextMenu>
                                    <ContextMenu>
                                        <MenuItem Header="Rename" Click="{s:Action RenameMoodButton_Click}"/>
                                        <MenuItem Header="Delete" Click="{s:Action RemoveMoodButton_Click}"/>
                                    </ContextMenu>
                                </Button.ContextMenu>
                            </Button>
                        </DataTemplate>
                    </ItemsControl.ItemTemplate>
                </ItemsControl>
            </ScrollViewer>
            <Button x:Name="addMoodButton" Content="Add mood" Click="{s:Action AddMood_Click}" Grid.Column="1" Grid.Row="1" IsEnabled="{Binding SelectedScene, Converter={StaticResource ObjectToBooleanConverter}}"/>
            <Grid Grid.Column="2">
                <Grid.RowDefinitions>
                    <RowDefinition Height="50"/>
                    <RowDefinition Height="*"/>
                </Grid.RowDefinitions>
                <Button Name="playAllButton" Height="50" HorizontalAlignment="Stretch" VerticalAlignment="Center" Click="{s:Action PlayAllButton_Click}">
                    <Image Name="playAllButtonImage" Style="{StaticResource PlayButtonImage}" DataContext="{Binding IsPlayingAll}"/>
                </Button>
                <ScrollViewer Grid.Row="1" VerticalScrollBarVisibility="Auto">
                <ItemsControl x:Name="soundStack" ItemsSource="{Binding SelectedMood.SoundProperties}"
                              dd:DragDrop.IsDragSource="True" dd:DragDrop.IsDropTarget="True" dd:DragDrop.DragHandler="{Binding}">
                    <ItemsControl.ItemsPanel>
                        <ItemsPanelTemplate>
                            <StackPanel Name="soundsPanel" Background="White" Margin="0,0,0,0"/>
                        </ItemsPanelTemplate>
                    </ItemsControl.ItemsPanel>
                    <ItemsControl.ItemTemplate>
                        <DataTemplate>
                            <custom:SoundControl SoundPropertyModel="{Binding Path=., Mode=TwoWay}" OutputDevice="{Binding ElementName=soundStack, Path=DataContext.SelectedOutputDevice}">
                                <custom:SoundControl.ContextMenu>
                                    <ContextMenu>
                                        <MenuItem Header="Edit" Click="{s:Action EditSoundControl_Click}"/>
                                        <MenuItem Header="Clone" Click="{s:Action CloneSoundControl_Click}"/>
                                        <MenuItem Header="Delete" Click="{s:Action RemoveSoundControl_Click}"/>
                                    </ContextMenu>
                                </custom:SoundControl.ContextMenu>
                            </custom:SoundControl>
                        </DataTemplate>
                    </ItemsControl.ItemTemplate>
                </ItemsControl>
            </ScrollViewer>
            </Grid>
            <Button x:Name="addSoundButton" Content="Add sound" Click="{s:Action AddSound_Click}" Grid.Column="2" Grid.Row="1" IsEnabled="{Binding SelectedMood, Converter={StaticResource ObjectToBooleanConverter}}"/>
        </Grid>
    </DockPanel>
</Window>
